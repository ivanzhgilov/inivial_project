from flask import Flask, render_template
from flask import redirect

app = Flask(__name__)
app.config['SECRET_KEY'] = 'secret_key'
third_degree = ["Определение уравнений третьей степени", "Разложение на линейные множители", "Формула Кардано"]
fourth_degree = ["Определение уравнений четвертой степени", "Разложeние на линейные множители",
                 "Решение с помощью кубической резольвенты", "Частный случай решения уравнений"]
arr = {
    1: ["Определение уравнений третьей степени", """Уравнение третьей степени или кубическое уравнение – алгебраическое уравнение вида: 
ax^3 + bx^2 + cx + d = 0, a не равно 0,
где a, b, c, d – действительные, при этом ax^3 – кубический, bx^2 – квадратный, cx – линейный и d - свободный члены.""",
        """После деления на a уравнение принимает канонический вид:
x^3 + rx^2 + sx + t = 0,
где r = b/a, s = c/a, t = d/a.
""",
        """Делая в уравнении замену неизвестного y = x + (r/3)(x = y – (r/3)), получаем так называемое приведённое уравнение:
y^3 + py + q = 0,
где p=(3s + r^2)/3, q=(2r^3)/27-rs/3+t.
""",
        """Число действительных решений кубического уравнения зависит от дискриминанта D = (p/3)^3 + (q/2)^2""",
        "D > 0	    Одно действительное и два комплексно-сопряженных решения",
        "D < 0	    Три действительных решения",
        "D = 0	    Одно действительное и одно действительное двукратное решение или одно трехкратное решение (если p = q = 0)",
        ],
    2: ["Определение уравнений четвертой степени", """Уравнение четвертой степени – это алгебраическое уравнение вида:
    ax^4 + bx^3 + cx^2 + dx + e = 0, a не равно 0,
Где a, b, c, d, e – действительные.""",
        """Посредством замены y = x + b/(4a) данное уравнение переводим в приведенное уравнение
y^4 + py^2 + qy + r = 0,
где p, q и r – рациональные функции коэффициентов a, b, c, d, e.
""",
        """Вид решения этого уравнения зависит от вида решения его кубической резольвенты
z^3 + 2pz^2 + (p^2 – 4r)z – q^2 = 0.
""",
        "Все корни кубической резольвенты действительны и положительны *) 	Четыре действительных корня",
        "Все корни кубической резольвенты действительны, из них один положительный и два отрицательных *)   Две пары комплексно-сопряженных корней",
        "Один действительный корень и два комплексно-сопряженных корня кубической резольвенты   Два действительных и два комплексно-сопряженных корня",
        "*) Согласно теореме Виета, произведение корней z_1, z_2, z_3, равное q_2, должно быть всегда положительным (q не равно 0)"],
    3: ["Разложение на линейные множители",
        "Если удается найти разложение ax^3 + bx^2 + cx + d = a(x – x1)(x – x2)(x – x3),",
        "то уравнение ax^3 + bx^2 + cx + d = 0 имеет множество решений {x_1, x_2, x_3}.",
        "Примеры для решения",
        "x^3 - 3x^2 -6x + 8 = 0",
        "ответ: -2; 1; 4.",
        "9x^3-9x^2-x+1=0.",
        "ответ: +-1/3; 1"],
    7: ["Разложeние на линейные множители",
        "Если удается произвести разложение многочлена ax^4 + bx^3 + cx^2 + dx + e = a * (x – x1)(x – x2)(x – x3)(x – x3),",
        "то уравнение ax4 + bx^3 + cx^2 + dx + e = 0 имеет множество решений {x_1, x_2, x_3, x_4}.",
        "Пример для решения:",
        "x^4 + 4x^3 - 18x^2 - 12x + 9 = 0",
        "ответ: -1; 3; -3 +- 2√(3)"],
    5: ["Решение с помощью кубической резольвенты", """Если z_1, z_2, z_3 – корни кубической резольвенты, то""",
        "y1 = (√(z_1 )  +  √(z_2 )  +  √(z_3 ))/2",
        "y2 = (√(z_1 )  –  √(z_2 )  –  √(z_3 ))/2",
        "y3 = (– √(z_1 )  +  √(z_2 )  –  √(z_3 ))/2",
        "y3 = (– √(z_1 )  –   √(z_2 )  +  √(z_3 ))/2",
        "Далее посредством замены x = y – b/(4a) находят решения исходного уравнения четвертой степени.",
        "Пример для решения",
        "x^4 + 3x^3 + 3x^2 - x - 6 = 0",
        "ответ: -2; 1; -1 +- i√(2)"],
    6: ["Частный случай решения уравнений",
        """Если в уравнении ax^4 + bx^3 + cx^2 + dx + e = 0 выполняется равенство b = d = 0, то мы имеем так называемое биквадратное уравнение ax^4+ +cx^2 + e = 0.""",
        """Посредством замены переменной x^2 = t это уравнение переводится в квадратное at^2 + ct + e = 0.""",
        """Из решений t_1, t_2 этого уравнения, полагая x^2 = t, получают корни исходного уравнения 4-й степени.""",
        "Примеры для решения:",
        "9x^4-37x^2+4=0.",
        "ответ: x= +- 2",
        "x^4+10x^2+9=0.",
        "ответ: нет корней"],
    4: ["Формула Кардано",
        """Формула Кардано для кубического уравнения  x^3 + rx^2 + sx + t = 0 относится к его приведенному виду y^3 + py + q = 0. В этом случае""",
        "y1 = u + v,",
        "y2 = - (u + v)/2 + (u - v)/2i√3 = E_1u + E2v,",
        "y3 = - (u + v)/2 - (u - v)/2 i√3 = E_2u + E1v,",
        "u = ∛(-q/2+ √(2&D)) ,			v = ∛(-q/2-√(2&D)) ,",
        "D = (p/3)3 + (q/2)2,		E_1,_2 = (-1 +- i∛3)/2.",
        """Посредством замены x_k = y_k – (r/3) (k = 1, 2, 3) из y_k получим решения x_k данного кубического уравнения.""",
        "Пример для решения:",
        "2x^3 - 11x^2 + 12x + 9 = 0",
        "ответ: 3; -1/2"
        ]
}


@app.route('/')
@app.route('/main_window')
def index():
    title = "Главная"
    return render_template('main_window.html', title=title)


@app.route('/list_paragraphs/<theme>')
def list_prof(theme):
    if theme == "third_degree":
        lessons = third_degree
        theme = "Уравнения третьей степени"
    else:
        lessons = fourth_degree
        theme = "Уравнения четвертой степени"
    title = theme
    return render_template('list_paragraphs.html', title=title, lessons=lessons, theme=theme)


@app.route('/paragraph/<lesson>')
def distribution(lesson):
    title = lesson
    if lesson == "Определение уравнений третьей степени":
        n = 1
        title = "Определение уравнений третьей степени"
    elif lesson == "Определение уравнений четвертой степени":
        n = 2
        title = "Определение уравнений четвертой степени"
    elif lesson == "Разложение на линейные множители":
        n = 3
        title = "Разложение на линейные множители"
    elif lesson == "Формула Кардано":
        n = 4
        title = "Формула Кардано"
    elif lesson == "Решение с помощью кубической резольвенты":
        n = 5
        title = "Решение с помощью кубической резольвенты"
    elif lesson == "Частный случай решения уравнений":
        n = 6
        title = "Частный случай решения уравнений"
    elif lesson == "Разложeние на линейные множители":
        n = 7
        title = "Разложeние на линейные множители"
    materials = arr[n]
    return render_template('paragraph.html', title=title, materials=materials)


if __name__ == '__main__':
    app.run(port=8080, host='127.0.0.1')
